$ cd C:
$ mkdir le                                   //创建一个空目录
$ cd le
$ pwd                                          //我在哪
$ ls                                              //我所在目录下有啥
$ git init                                      //通过git init命令把这个目录变成Git可以管理的仓库 
                                                  // 当前目录下多了一个.git的目录，如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。
$ git add learn.txt
$ git commit -m "wrote a learn file"
$ git log                                       //查看每次commit的注释(含作者、时间）
$ git log --pretty=oneline                      //查看每次的注释（简化到每个一行）
$ git reset --hard HEAD^^                       //（一个^让HEAD回到上一步）（HEAD~100,一次返回100项）
$ git reset --hard 33aed                        //让HEAD回到某一文件版本
$ git reflog                                    //git reflog 记录了每一次命令（应该是HEAD指针相关的）；可用于查找各版本的commit id
$ git status                                    //查看暂存区（stage/index)状态；
                                                //Git 的隐藏目录.git（版本库）中有暂存区、自动创建的第一个分支master，以及指向master的指针HEAD
$ git restore --staged learn.txt                //to unstage
$ git diff HEAD -- LICENSE.txt                  //查看工作区和版本库（repository）里面最新版本的区别
$ rm test.txt                                            //直接在文件管理器中把没用的文件删了，或者用rm命令删了 
$ git rm test.txt   
$ git checkout -- test.txt                          //用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。      
$ git remote add origin git@github.com:Shuremm/le.git   //关联一个远程库（注意，在该目录下操作）
$ git push -u origin master                   //第一次推送master分支的所有内容                                                
$ git push origin master                        //把本地master分支的最新修改推送至GitHub
$ git clone  <抄地址>                        //把一个github上的仓库克隆到本地

分支:                                                
查看分支：git branch（当前分支前面会标一个*号）
创建分支：git branch <name>
切换分支：git checkout <name>或者git switch <name>
创建+切换分支：git checkout -b <name>或者git switch -c <name>
合并指定分支到当前分支：git merge <name>
删除分支：git branch -d <name>   ..                                              
                                                
                                                
                                                





